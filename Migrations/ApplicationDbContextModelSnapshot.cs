// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherRecords.Data;

#nullable disable

namespace weatherWebRecords.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeatherWebRecords.Models.WeatherRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Day")
                        .HasColumnType("date");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<float>("WindSpeed")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("WeatherRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Tokyo",
                            Country = "Japan",
                            Day = new DateOnly(2025, 4, 19),
                            Humidity = 65,
                            Temperature = 23.5f,
                            WindSpeed = 12.3f
                        },
                        new
                        {
                            Id = 2,
                            City = "San Francisco",
                            Country = "USA",
                            Day = new DateOnly(2025, 4, 18),
                            Humidity = 78,
                            Temperature = 17.8f,
                            WindSpeed = 8.7f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
